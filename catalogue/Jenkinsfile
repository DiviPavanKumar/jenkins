// Roboshop-catalogue service Jenkins pipeline

pipeline {
    // Pre-build stage
    agent { label 'AGENT-1' }

    environment { 
        appVersion = ''
    }

    options {
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds() 
    }

    // Build stages
    stages {
        stage('Read package.json') {
            steps {
                script {
                    def packageJson = readJSON file: 'catalogue/package.json'
                    echo "Package Name: ${packageJson.name}"
                    env.appVersion = packageJson.version
                    echo "App Version: ${packageJson.version}"
                    // Access other properties as needed, e.g., packageJson.scripts.build
                }
            }
        }
        
        stage('Install Dependencies') {
            steps {
                script {
                    sh '''
                        cd catalogue
                        npm install 
                    '''
                }
            }
        }
        stage('Docker Build and Push') {
            steps {
                script {
                    sh '''
                        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 069233348386.dkr.ecr.us-east-1.amazonaws.com
                        docker build -t roboshop/catalogue .
                        docker tag roboshop/catalogue:latest 069233348386.dkr.ecr.us-east-1.amazonaws.com/roboshop/catalogue:1.0.0
                        docker push 069233348386.dkr.ecr.us-east-1.amazonaws.com/roboshop/catalogue:1.0.0
                    '''
                }
            }
        }
    }

    post {
        always {
            echo "Always say Hi"
            deleteDir()
        }
        success {
            echo "Pipeline is Success"
        }
        failure {
            echo "Pipeline has Failed"
        }
    }
}