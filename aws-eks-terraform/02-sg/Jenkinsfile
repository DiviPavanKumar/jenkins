pipeline {
    agent { label 'AGENT-1' }

    environment { 
        appVersion = ''
        REGION     = "us-east-1"
        ACCOUNT_ID = "069233348386"
        PROJECT    = "roboshop"
    }

    options {
        timeout(time: 30, unit: 'MINUTES') 
        disableConcurrentBuilds()
        ansiColor('xterm')
    }

    stages {
        stage('Init') {
            steps {
                withAWS(credentials: 'aws-auth', region: "${REGION}") {
                    sh """
                        cd aws-eks-terraform/02-sg
                        terraform init -reconfigure
                    """
                }
            }
        }

        stage('Plan') {
            steps {
                withAWS(credentials: 'aws-auth', region: "${REGION}") {
                    sh """
                        cd aws-eks-terraform/02-sg
                        terraform plan
                    """
                }
            }
        }

        stage('Apply') {
            steps {
                withAWS(credentials: 'aws-auth', region: "${REGION}") {
                    sh """
                        cd aws-eks-terraform/02-sg
                        terraform apply -auto-approve
                    """
                }
            }
        }

        stage('Bastion EKS ACM') {
            parallel {
                stage('Trigger Bastion') {
                    steps {
                        script {
                            build job: '03-bastion', propagate: false, wait: false
                        }
                    }
                }
                stage('Trigger EKS') {
                    steps {
                        script {
                            build job: '06-eks', propagate: false, wait: false
                        }
                    }
                }
                stage('Trigger ACM') {
                    steps {
                        script {
                            build job: '04-acm', propagate: false, wait: false
                        }
                    }
                }
            }
        }

        stage('Trigger ALB') {
            steps {
                script {
                    build job: '05-ingress-alb', propagate: false, wait: false
                }
            }
        }
    }

    post {
        always { 
            echo 'I will always say Hello again!'
            deleteDir()
        }

        success { 
            echo 'Hello success'
        }

        failure { 
            echo 'Hello Failed'
        }
    }
}
