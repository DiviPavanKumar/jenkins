// Roboshop-catalogue service Jenkins pipeline

pipeline {
    agent { label 'AGENT-1' }

    environment { 
        REGION     = "us-east-1"
        ACCOUNT_ID = "069233348386"
        PROJECT    = "roboshop"
        COMPONENT  = "catalogue"
    }

    options {
        timeout(time: 30, unit: 'MINUTES') 
        disableConcurrentBuilds()
    }

    parameters {
        string(name: 'appVersion', description: 'Image version of the application')
        choice(name: 'deploy_to', choices: ['dev', 'qa', 'prod'], description: 'Pick the environment to deploy')
    }

    stages {
        stage('Deploy') {
            steps {
                script {
                    withAWS(credentials: 'aws-auth', region: "${env.REGION}") {
                        sh """
                            # ✅ Configure kubeconfig for target EKS cluster
                            aws eks update-kubeconfig --region ${REGION} --name "${PROJECT}-${params.deploy_to}"

                            # ✅ Verify cluster connectivity
                            kubectl get nodes

                            # ✅ Ensure namespace exists
                            kubectl apply -f catalogue-cd/namespace.yaml

                            # ✅ Replace image version in values file
                            sed -i "s/IMAGE_VERSION/${params.appVersion}/g" catalogue-cd/values-${params.deploy_to}.yaml

                            # ✅ Deploy using Helm
                            helm upgrade --install ${COMPONENT} catalogue-cd/ \
                                -f catalogue-cd/values-${params.deploy_to}.yaml \
                                -n ${PROJECT}
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            echo "Always say Hi"
            deleteDir()
        }
        success {
            echo "Pipeline is Success"
        }
        failure {
            echo "Pipeline has Failed"
        }
    }
}
